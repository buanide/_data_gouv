INSERT INTO TMP.TT_KYC_BDI_PP_ST1 
SELECT FN_FORMAT_MSISDN_TO_9DIGITS(TRIM(A.MSISDN)) AS MSISDN, TRIM(A.TYPE_PIECE) AS TYPE_PIECE, 
TRIM(A.NUMERO_PIECE) AS NUMERO_PIECE, UPPER(TRIM(A.NOM_PRENOM)) AS NOM_PRENOM, UPPER(TRIM(A.NOM)) AS NOM, 
UPPER(TRIM(A.PRENOM)) AS PRENOM, DATE_NAISSANCE, DATE_EXPIRATION, (CASE WHEN LENGTH(UPPER(TRIM(a.adresse))) = 0 THEN a.ville || '  ' || a.quartier ELSE a.adresse END) AS ADRESSE, TRIM(A.NUMERO_PIECE_TUTEUR) AS NUMERO_PIECE_TUTEUR, TRIM(A.NOM_PARENT) AS NOM_PARENT, DATE_NAISSANCE_TUTEUR, TRIM(A.NOM_STRUCTURE) AS NOM_STRUCTURE, TRIM(A.NUMERO_REGISTRE_COMMERCE) AS NUMERO_REGISTRE_COMMERCE, TRIM(A.NUMERO_PIECE_REPRESENTANT_LEGAL) AS NUMERO_PIECE_REP_LEGAL, DATE_ACTIVATION, DATE_CHANGEMENT_STATUT, UPPER(TRIM(A.STATUT)) AS STATUT, TRIM(A.ODBINCOMINGCALLS) AS ODBINCOMINGCALLS, TRIM(A.ODBOUTGOINGCALLS) AS ODBOUTGOINGCALLS, TRIM(A.IMEI) AS IMEI, (CASE WHEN F.MSISDN IS NULL OR TRIM(F.MSISDN) = '' THEN 'NON' ELSE 'OUI' END) AS STATUT_DEROGATION, TRIM(B.ADMINISTRATIVE_REGION) AS REGION_ADMINISTRATIVE, TRIM(B.COMMERCIAL_REGION) AS 
REGION_COMMERCIALE, TRIM(B.SITE_NAME) AS SITE_NAME, 
TRIM(B.TOWNNAME) AS VILLE, TRIM(B.LONGITUDE) AS LONGITUDE, TRIM(B.LATITUDE) AS LATITUDE, (CASE WHEN NOT C.access_key IS NULL AND TRIM(C.access_key) <> '' THEN TRIM(C.COMMERCIAL_OFFER) ELSE 'N/A' END) AS OFFRE_COMMERCIALE, (CASE WHEN NOT TRIM(C.access_key) IS NULL AND TRIM(C.access_key) <> '' THEN UPPER(COALESCE(C.OSP_CONTRACT_TYPE, C.OSP_ACCOUNT_TYPE)) ELSE 'N/A' END) AS TYPE_CONTRAT, (CASE WHEN NOT TRIM(C.access_key) IS NULL AND TRIM(C.access_key) <> '' THEN TRIM(C.SEGMENTATION) ELSE 'N/A' END) AS SEGMENTATION, 0 AS REV_M_3, 
0 AS REV_M_2, 0 AS REV_M_1, 0 AS REV_MOY, (CASE WHEN NOT TRIM(C.access_key) IS NULL AND TRIM(C.access_key) <> '' THEN TRIM(C.OSP_STATUS) ELSE 'N/A' END) AS STATUT_IN, (CASE WHEN TRIM(A.NUMERO_PIECE) = '' OR A.NUMERO_PIECE IS NULL THEN 'OUI' ELSE 'NON' END) AS NUMERO_PIECE_ABSENT, (CASE WHEN 
TRIM(A.NUMERO_PIECE_TUTEUR) = '' 
OR A.NUMERO_PIECE_TUTEUR IS NULL THEN 'OUI' ELSE 'NON' END) 
AS NUMERO_PIECE_TUT_ABSENT, (CASE WHEN NOT (TRIM(A.NUMERO_PIECE) 
IS NULL OR TRIM(A.NUMERO_PIECE) = '') AND LENGTH(TRIM(A.NUMERO_PIECE)) < 4 THEN 'OUI' ELSE 'NON' END) AS NUMERO_PIECE_INF_4, (CASE WHEN NOT (TRIM(A.NUMERO_PIECE_TUTEUR) IS NULL OR TRIM(A.NUMERO_PIECE_TUTEUR) = '') AND LENGTH(TRIM(A.NUMERO_PIECE_TUTEUR)) < 4 THEN 'OUI' ELSE 'NON' 
END) AS NUMERO_PIECE_TUT_INF_4, (CASE WHEN TRIM(A.NUMERO_PIECE) IN ('000000000', '111111111', '222222222', '333333333', '444444444', '555555555', 
'666666666', '777777777', '888888888', '999999999', '012345678', '122222222', '123456789', '100010001', '1122334455') OR LENGTH(TRIM(A.NUMERO_PIECE)) > 21 OR TRIM(A.NUMERO_PIECE) LIKE '112233445%' THEN 'OUI' ELSE 'NON' END) AS NUMERO_PIECE_NON_AUTHORISE, (CASE WHEN TRIM(A.NUMERO_PIECE_TUTEUR) IN ('000000000', '111111111', '222222222', '333333333', '444444444', '555555555', '666666666', '777777777', '888888888', '999999999', '012345678', '122222222', '123456789', '100010001', '1122334455') OR LENGTH(TRIM(A.NUMERO_PIECE_TUTEUR)) > 21 OR TRIM(A.NUMERO_PIECE) = TRIM(A.NUMERO_PIECE_TUTEUR) OR TRIM(A.NUMERO_PIECE_TUTEUR) LIKE '112233445%' THEN 'OUI' ELSE 'NON' END) AS NUMERO_PIECE_TUT_NON_AUTH, (CASE WHEN TRIM(A.MSISDN) = TRIM(A.NUMERO_PIECE) THEN 'OUI' ELSE 'NON' END) AS NUMERO_PIECE_EGALE_MSISDN, (CASE WHEN TRIM(A.MSISDN) = TRIM(A.NUMERO_PIECE_TUTEUR) THEN 'OUI' ELSE 
'NON' END) AS NUMERO_PIECE_TUT_EGALE_MSISDN, (CASE WHEN NOT TRIM(TRANSLATE(LOWER(TRIM(A.NUMERO_PIECE)), 'abcdefghijklmnopqMCMLXXXIVrstuvwxyz1234567890-/', ' ')) IS NULL AND TRIM(TRANSLATE(LOWER(TRIM(A.NUMERO_PIECE)), 'abcdefghijklmnopqMCMLXXXIVrstuvwxyz1234567890-/', ' ')) <> '' THEN 'OUI' ELSE 'NON' END) AS NUMERO_PIECE_A_CARACT_NON_AUTH, (CASE WHEN NOT TRIM(TRANSLATE(LOWER(TRIM(A.NUMERO_PIECE_TUTEUR)), 'abcdefghijklmnopMCMLXXXIVqrstuvwxyz1234567890-/', ' ')) IS NULL AND TRIM(TRANSLATE(LOWER(TRIM(A.NUMERO_PIECE_TUTEUR)), 'abcdefghijklmnopMCMLXXXIVqrstuvwxyz1234567890-/', ' ')) <> '' THEN 'OUI' ELSE 'NON' END) AS NUMERO_PIECE_TUT_CARAC_NON_A, (CASE WHEN TRIM(TRANSLATE(LOWER(TRIM(A.NUMERO_PIECE)), 'abcdefghijklmnopqrMCMLXXXIVstuvwxyz-', ' ')) = '' OR TRIM(TRANSLATE(LOWER(TRIM(A.NUMERO_PIECE)), 'abcdefghijklmnopqrMCMLXXXIVstuvwxyz-', ' ')) IS NULL THEN 'OUI' ELSE 'NON' END) AS NUMERO_PIECE_UNIQUEMENT_LETTRE, (CASE WHEN TRIM(TRANSLATE(LOWER(TRIM(A.NUMERO_PIECE_TUTEUR)), 'abcdefghijklMCMLXXXIVmnopqrstuvwxyz-', 
' ')) = '' OR TRIM(TRANSLATE(LOWER(TRIM(A.NUMERO_PIECE_TUTEUR)), 'abcdefghijklMCMLXXXIVmnopqrstuvwxyz-', ' ')) IS NULL THEN 'OUI' ELSE 'NON' END) 
AS NUMERO_PIECE_TUT_UNIQ_LETTRE, (CASE WHEN TRIM(A.NOM_PRENOM) = '' OR A.NOM_PRENOM IS NULL THEN 'OUI' ELSE 'NON' END) AS NOM_PRENOM_ABSENT, (CASE WHEN TRIM(A.NOM_PARENT) = '' OR A.NOM_PARENT IS NULL THEN 'OUI' ELSE 'NON' END) AS NOM_PARENT_ABSENT, (CASE WHEN (TRIM(TRANSLATE(LOWER(TRIM(A.NOM_PRENOM)), 'aeiou', ' ')) = '' OR TRIM(TRANSLATE(LOWER(TRIM(A.NOM_PRENOM)), 'aeiou', ' ')) IS NULL) OR (TRIM(TRANSLATE(LOWER(TRIM(A.NOM_PRENOM)), 
'bcdfghjklmnpqrstvwxz', ' ')) = '' OR TRIM(TRANSLATE(LOWER(TRIM(A.NOM_PRENOM)), 'bcdfghjklmnpqrstvwxz', ' ')) IS NULL) OR (TRIM(TRANSLATE(TRIM(A.NOM_PRENOM), '1234567890.', ' ')) = '' OR TRIM(TRANSLATE(TRIM(A.NOM_PRENOM), '1234567890.', ' ')) IS NULL) OR (LENGTH(TRIM(A.NOM_PRENOM)) <= 1 AND 
NOT TRIM(A.NOM_PRENOM) IS NULL AND TRIM(A.NOM_PRENOM) <> '') OR LOWER(TRIM(A.NOM_PRENOM)) IN ('orange', 'vendeur', 'madame', 'monsieur', 'delta', 
'phone', 'inconnu', 'inconnue', 'anonyme', 'unknown') OR (NOT TRIM(TRANSLATE(LOWER(TRIM(A.NOM_PRENOM)), '*/\?,)([@]_%#}&{    asdfghjklqwertyuiopzxcvbnm1MCMLXXXIV234567890¿çéèàäëüïöî''ôûâê-.', ' ')) IS NULL AND TRIM(TRANSLATE(LOWER(TRIM(A.NOM_PRENOM)), '*/\?,)([@]_%#}&{    asdfghjklqwertyuiopzxcvbnm1MCMLXXXIV234567890¿çéèàäëüïöîôû''âê-.', ' ')) <> '') THEN 'OUI' ELSE 'NON' END) AS NOM_PRENOM_DOUTEUX, (CASE WHEN (TRIM(TRANSLATE(LOWER(TRIM(A.NOM_PARENT)), 'aeiou', ' ')) = '' OR TRIM(TRANSLATE(LOWER(TRIM(A.NOM_PARENT)), 'aeiou', ' ')) IS NULL) OR (TRIM(TRANSLATE(LOWER(TRIM(A.NOM_PARENT)), 'bcdfghjklmnpqrstvwxz', ' ')) = '' OR TRIM(TRANSLATE(LOWER(TRIM(A.NOM_PARENT)), 'bcdfghjklmnpqrstvwxz', ' ')) IS NULL) OR (TRIM(TRANSLATE(TRIM(A.NOM_PARENT), '1234567890.', ' ')) = '' OR TRIM(TRANSLATE(TRIM(A.NOM_PARENT), '1234567890.', ' ')) IS NULL) OR (LENGTH(TRIM(A.NOM_PARENT)) <= 1 AND NOT TRIM(A.NOM_PARENT) IS NULL AND TRIM(A.NOM_PARENT) <> '') OR LOWER(TRIM(A.NOM_PARENT)) IN ('orange', 'vendeur', 'madame', 'monsieur', 'delta', 'phone', 'inconnu', 'inconnue', 'anonyme', 'unknown') OR (TRIM(TRANSLATE(LOWER(TRIM(A.NOM_PARENT)), '*/\?,)([@]_%#}&{    asdfghjklqwertyuiopzxMCMLXXXIVcvbnm1234567890¿çéèàäëüïöîôû''âê-.', ' ')) <> '' AND NOT TRIM(TRANSLATE(LOWER(TRIM(A.NOM_PARENT)), '*/\?,)([@]_%#}&{    asdfghjklqwertyuiopzxMCMLXXXIVcvbnm1234567890¿çéèàäëüïöîôû''âê-.', ' ')) IS NULL) THEN 'OUI' ELSE 'NON' END) AS NOM_PARENT_DOUTEUX, (CASE WHEN A.DATE_NAISSANCE IS NULL THEN 'OUI' ELSE 'NON' END) AS DATE_NAISSANCE_ABSENT, (CASE WHEN A.DATE_NAISSANCE_TUTEUR IS NULL THEN 'OUI' ELSE 'NON' END) AS DATE_NAISSANCE_TUT_ABSENT, (CASE WHEN A.DATE_EXPIRATION IS NULL THEN 'OUI' ELSE 'NON' END) AS DATE_EXPIRATION_ABSENT, (CASE WHEN TRIM(A.ADRESSE) = '' OR A.ADRESSE IS NULL THEN 'OUI' ELSE 'NON' END) AS ADRESSE_ABSENT, (CASE WHEN (NOT TRIM(TRANSLATE(LOWER(TRIM(A.ADRESSE)), 'abcdefghijklmnopqrstuvwxyz123456MCMLXXXIV()[]_7890çéèàäëüï''öî¿ôûâê,-./:', ' ')) IS NULL AND TRIM(TRANSLATE(LOWER(TRIM(A.ADRESSE)), 'abcdefghijklmnopqrstuvwxyz123456MCMLXXXIV()[]_7890çéèàäëüïöî¿ôû''âê,-./:', ' ')) <> '') OR (TRIM(TRANSLATE(TRIM(A.ADRESSE), '12345678''90-./:', ' ')) = '' OR TRIM(TRANSLATE(TRIM(A.ADRESSE), '12345678''90-./:', ' ')) IS NULL) OR (TRIM(TRANSLATE(LOWER(TRIM(A.ADRESSE)), 'bcdfghjklmnpqrstv''wxzç-./,:', ' ')) = '' OR TRIM(TRANSLATE(LOWER(TRIM(A.ADRESSE)), 'bcdfghjklmnpqrstvw''xzç-./,:', ' ')) IS NULL) OR (TRIM(TRANSLATE(LOWER(TRIM(A.ADRESSE)), 'aeiouéèàäëüïöîôû''âê-./:', ' ')) = '' OR TRIM(TRANSLATE(LOWER(TRIM(A.ADRESSE)), 'aeiouéèàäëüïöî''ôûâê-./:', ' ')) IS NULL) OR (LENGTH(TRIM(A.ADRESSE)) < 2 AND NOT (TRIM(A.ADRESSE) IS 
NULL OR TRIM(A.ADRESSE) = '')) OR TRIM(LOWER(TRIM(A.ADRESSE))) IN ('n/a', 'nan', 'unknown', 'inconnue', 'sans adresse', 'sans', 'non renseignée') 
THEN 'OUI' ELSE 'NON' END) AS ADRESSE_DOUTEUSE, (CASE WHEN TRIM(A.TYPE_PERSONNE) = '' OR A.TYPE_PERSONNE IS NULL THEN 'OUI' ELSE 'NON' END) AS TYPE_PERSONNE_INCONNU, 'null' AS MINEUR_MAL_IDENTIFIE, (CASE WHEN NOT (TRIM(G.MSISDN) IS NULL OR TRIM(G.MSISDN) = '') THEN 'OUI' ELSE 'NON' END) AS EST_PREMIUM, TRIM(A.TYPE_PIECE_TUTEUR) AS TYPE_PIECE_TUTEUR, TRIM(A.ADRESSE_TUTEUR) AS ADRESSE_TUTEUR, TRIM(A.ACCEPTATION_CGV) AS ACCEPTATION_CGV, 
TRIM(A.CONTRAT_SOUCRIPTION) AS CONTRAT_SOUCRIPTION, TRIM(A.DISPONIBILITE_SCAN) AS DISPONIBILITE_SCAN, TRIM(A.PLAN_LOCALISATION) AS PLAN_LOCALISATION, TRIM(A.TYPE_PERSONNE) AS TYPE_PERSONNE_I, (CASE WHEN TRIM(A.DATE_VALIDATION_BO) IS NULL OR TRIM(A.DATE_VALIDATION_BO) = '' THEN NULL WHEN TRIM(A.DATE_VALIDATION_BO) LIKE '%/%' THEN UNIX_TO_STR(STR_TO_UNIX(TRANSLATE(SUBSTRING(TRIM(A.DATE_VALIDATION_BO), 1, 19), '/', '-'), '%Y-%m-%d %H:%M:%S'), '%Y-%m-%d %H:%M:%S') WHEN TRIM(A.DATE_VALIDATION_BO) LIKE '%-%' THEN UNIX_TO_STR(STR_TO_UNIX(SUBSTRING(TRIM(A.DATE_VALIDATION_BO), 1, 19), '%Y-%m-%d %H:%M:%S'), '%Y-%m-%d %H:%M:%S') ELSE NULL END) AS DATE_VALIDATION_BO, TRIM(A.STATUT_VALIDATION_BO) AS STATUT_VALIDATION_BO, TRIM(A.MOTIF_REJET_BO) AS MOTIF_REJET_BO, CURRENT_TIMESTAMP() AS INSERT_DATE, CAST('###SLICE_VALUE###' AS DATE) AS EVENT_DATE FROM (SELECT msisdn, type_personne, nom_prenom, id_type_piece, type_piece, numero_piece, adresse, quartier, ville, statut, statut_validation_bo, motif_rejet_bo, date_validation_bo, login_validateur_bo, canal_validateur_bo, type_abonnement, csmoddate, ccmoddate, compte_client_structure, nom_structure, numero_registre_commerce, numero_piece_representant_legal, imei, statut_derogation, region_administrative, region_commerciale, site_name, ville_site, offre_commerciale, type_contrat, segmentation, score_vip, date_souscription, ville_structure, quartier_structure, raison_statut, prenom, nom, customer_id, contract_id, compte_client, plan_localisation, contrat_soucription, acceptation_cgv, disponibilite_scan, nom_tuteur AS nom_parent, prenom_tuteur, numero_piece_tuteur, date_expiration_tuteur, id_type_piece_tuteur, type_piece_tuteur, adresse_tuteur, identificateur, localisation_identificateur, profession, odbincomingcalls, odboutgoingcalls, (CASE WHEN TRIM(DATE_NAISSANCE) IS NULL OR TRIM(DATE_NAISSANCE) = '' THEN NULL WHEN TRIM(DATE_NAISSANCE) LIKE '%-%' THEN TRY_CAST(SUBSTRING(TRIM(DATE_NAISSANCE), 1, 10) AS DATE) WHEN TRIM(DATE_NAISSANCE) LIKE '%/%' THEN TRY_CAST(TRANSLATE(SUBSTRING(TRIM(DATE_NAISSANCE), 1, 10), '/', '-') AS DATE) ELSE NULL END) AS DATE_NAISSANCE, (CASE WHEN TRIM(DATE_EXPIRATION) IS NULL OR TRIM(DATE_EXPIRATION) 
= '' THEN NULL WHEN TRIM(DATE_EXPIRATION) LIKE '%-%' THEN TRY_CAST(SUBSTRING(TRIM(DATE_EXPIRATION), 1, 10) AS DATE) WHEN TRIM(DATE_EXPIRATION) LIKE '%/%' THEN TRY_CAST(TRANSLATE(SUBSTRING(TRIM(DATE_EXPIRATION), 1, 10), '/', '-') AS DATE) ELSE NULL END) AS DATE_EXPIRATION, (CASE WHEN TRIM(DATE_NAISSANCE_TUTEUR) IS NULL OR TRIM(DATE_NAISSANCE_TUTEUR) = '' THEN NULL WHEN TRIM(DATE_NAISSANCE_TUTEUR) LIKE '%-%' THEN TRY_CAST(SUBSTRING(TRIM(DATE_NAISSANCE_TUTEUR), 1, 10) AS DATE) WHEN TRIM(DATE_NAISSANCE_TUTEUR) LIKE '%/%' THEN TRY_CAST(TRANSLATE(SUBSTRING(TRIM(DATE_NAISSANCE_TUTEUR), 1, 10), '/', '-') AS DATE) ELSE NULL END) AS DATE_NAISSANCE_TUTEUR, (CASE WHEN TRIM(DATE_ACTIVATION) IS NULL OR TRIM(DATE_ACTIVATION) = '' THEN 
NULL WHEN TRIM(DATE_ACTIVATION) LIKE '%/%' THEN TRY_CAST(TRANSLATE(SUBSTRING(TRIM(DATE_ACTIVATION), 1, 19), '/', '-') AS TIMESTAMP) WHEN TRIM(DATE_ACTIVATION) LIKE '%-%' THEN TRY_CAST(SUBSTRING(TRIM(DATE_ACTIVATION), 1, 19) AS TIMESTAMP) ELSE NULL END) AS DATE_ACTIVATION, (CASE WHEN TRIM(DATE_CHANGEMENT_STATUT) IS NULL OR TRIM(DATE_CHANGEMENT_STATUT) = '' THEN NULL WHEN TRIM(DATE_CHANGEMENT_STATUT) LIKE '%/%' THEN TRY_CAST(TRANSLATE(SUBSTRING(TRIM(DATE_CHANGEMENT_STATUT), 1, 19), '/', '-') AS TIMESTAMP) WHEN TRIM(DATE_CHANGEMENT_STATUT) LIKE '%-%' THEN TRY_CAST(SUBSTRING(TRIM(DATE_CHANGEMENT_STATUT), 1, 19) AS TIMESTAMP) ELSE NULL END) AS DATE_CHANGEMENT_STATUT FROM CDR.SPARK_IT_KYC_BDI_FULL WHERE ORIGINAL_FILE_DATE = TS_OR_DS_ADD(CAST('###SLICE_VALUE###' AS DATE), 1, DAY) AND NOT type_personne IN ('M2M', 'FLOTTE')) AS A LEFT JOIN (SELECT AA.*, BB.LONGITUDE, BB.LATITUDE FROM (SELECT * FROM (SELECT a.*, ROW_NUMBER() OVER (PARTITION BY msisdn ORDER BY LAST_LOCATION_DAY DESC, insert_date DESC) AS RN FROM MON.SPARK_FT_CLIENT_LAST_SITE_DAY AS a WHERE EVENT_DATE = CAST('###SLICE_VALUE###' AS DATE)) AS x WHERE RN = 1) AS AA LEFT JOIN (SELECT * FROM (SELECT 
DISTINCT SITE_NAME, LONGITUDE, LATITUDE, ROW_NUMBER() OVER (PARTITION BY SITE_NAME ORDER BY SITE_NAME DESC) AS RANG FROM DIM.SPARK_DT_GSM_CELL_CODE) AS y WHERE RANG = 1) AS BB ON UPPER(TRIM(AA.SITE_NAME)) = UPPER(TRIM(BB.SITE_NAME))) AS B ON FN_FORMAT_MSISDN_TO_9DIGITS(TRIM(A.MSISDN)) = FN_FORMAT_MSISDN_TO_9DIGITS(TRIM(B.MSISDN)) LEFT JOIN (SELECT * FROM (SELECT * FROM MON.SPARK_FT_CONTRACT_SNAPSHOT WHERE EVENT_DATE = CAST('###SLICE_VALUE###' AS DATE)) AS A LEFT JOIN (SELECT OFFER_PROFILE_ID, CUSTOMER_TYPE, CUSTOMER_PROFILE, OFFER_NAME, PROFILE_CODE, PROFILE_NAME, INITIAL_CREDIT, RESALE_OF_TRAFFIC, RATEPLAN_ID, PLATFORM, CRM_SEGMENTATION, DECILE_TYPE, VALID_FROM_DATECODE, VALID_TO_DATECODE, IVR_NUMBER, PROFILE_ID, CONTRACT_TYPE, ESSBASE_SEGMENTATION, ESSBASE_RATEPLAN, OFFER_GROUP, OPERATOR_CODE AS OPERATOR_CODE_DIM, HORIZON_DOMAIN_CODE, HORIZON_DOMAIN_DESC, HORIZON_MARKET_CODE, HORIZON_MARKET_DESC, HORIZON_OFFER_CODE, HORIZON_OFFER_DESC, SEGMENTATION, OFFRE_B_TO_B, CAT_OFFRE_B_TO_B FROM DIM.SPARK_DT_OFFER_PROFILES) AS B ON UPPER(TRIM(A.COMMERCIAL_OFFER)) = UPPER(TRIM(B.PROFILE_CODE))) AS C ON FN_FORMAT_MSISDN_TO_9DIGITS(TRIM(A.MSISDN)) = FN_FORMAT_MSISDN_TO_9DIGITS(TRIM(C.ACCESS_KEY)) LEFT JOIN (SELECT MDM.MSISDN, SUM(CASE WHEN MDM.EVENT_MONTH = SUBSTRING(ADD_MONTHS(CAST('###SLICE_VALUE###' AS DATE), -3), 1, 7) THEN COALESCE(MDM.MAIN_RATED_TEL_AMOUNT, 0) + COALESCE(MDM.MAIN_RATED_SMS_AMOUNT, 0) + COALESCE(MDM.DATA_MAIN_RATED_AMOUNT, 0) 
+ COALESCE(MDM.TOTAL_SUBS_REVENUE, 0) + COALESCE(MDM.DATA_GOS_MAIN_RATED_AMOUNT, 0) + COALESCE(MDM.SOS_FEES, 0) + COALESCE(MDM.P2P_REFILL_FEES, 0) ELSE 0 END) AS REV_M_3, SUM(CASE WHEN MDM.EVENT_MONTH = SUBSTRING(ADD_MONTHS(CAST('###SLICE_VALUE###' AS DATE), -2), 1, 7) THEN COALESCE(MDM.MAIN_RATED_TEL_AMOUNT, 0) + COALESCE(MDM.MAIN_RATED_SMS_AMOUNT, 0) + COALESCE(MDM.DATA_MAIN_RATED_AMOUNT, 0) + COALESCE(MDM.TOTAL_SUBS_REVENUE, 0) + COALESCE(MDM.DATA_GOS_MAIN_RATED_AMOUNT, 0) + COALESCE(MDM.SOS_FEES, 0) + COALESCE(MDM.P2P_REFILL_FEES, 0) ELSE 0 END) AS REV_M_2, SUM(CASE WHEN MDM.EVENT_MONTH = SUBSTRING(ADD_MONTHS(CAST('###SLICE_VALUE###' AS DATE), -1), 1, 7) THEN COALESCE(MDM.MAIN_RATED_TEL_AMOUNT, 0) + COALESCE(MDM.MAIN_RATED_SMS_AMOUNT, 0) + COALESCE(MDM.DATA_MAIN_RATED_AMOUNT, 0) + COALESCE(MDM.TOTAL_SUBS_REVENUE, 0) + COALESCE(MDM.DATA_GOS_MAIN_RATED_AMOUNT, 0) + COALESCE(MDM.SOS_FEES, 0) + COALESCE(MDM.P2P_REFILL_FEES, 0) ELSE 0 END) AS REV_M_1 FROM MON.SPARK_FT_MARKETING_DATAMART_MONTH AS MDM WHERE EVENT_MONTH IN (SUBSTRING(ADD_MONTHS(CAST('###SLICE_VALUE###' AS DATE), -1), 1, 7), SUBSTRING(ADD_MONTHS(CAST('###SLICE_VALUE###' AS DATE), -2), 1, 
7), SUBSTRING(ADD_MONTHS(CAST('###SLICE_VALUE###' AS DATE), -3), 1, 7)) GROUP BY MSISDN) AS D ON FN_FORMAT_MSISDN_TO_9DIGITS(TRIM(A.MSISDN)) = FN_FORMAT_MSISDN_TO_9DIGITS(TRIM(D.MSISDN)) LEFT JOIN (SELECT MDM.MSISDN, SUM(CASE WHEN MDM.MOIS = SUBSTRING(ADD_MONTHS(CAST('###SLICE_VALUE###' AS DATE), -3), 1, 7) THEN COALESCE(MDM.MAIN_REVENU_TOTAL, 0) + COALESCE(MDM.PROMO_REVENU_TOTAL, 0) ELSE 0 END) AS POST_REV_M_3, SUM(CASE WHEN MDM.MOIS = SUBSTRING(ADD_MONTHS(CAST('###SLICE_VALUE###' AS DATE), -2), 1, 7) THEN COALESCE(MDM.MAIN_REVENU_TOTAL, 0) + COALESCE(MDM.PROMO_REVENU_TOTAL, 0) ELSE 0 END) AS POST_REV_M_2, SUM(CASE WHEN MDM.MOIS = SUBSTRING(ADD_MONTHS(CAST('###SLICE_VALUE###' AS DATE), -1), 1, 7) THEN COALESCE(MDM.MAIN_REVENU_TOTAL, 0) + COALESCE(MDM.PROMO_REVENU_TOTAL, 0) ELSE 0 END) AS POST_REV_M_1 FROM MON.SPARK_FT_MSISDN_POST_MONTHLY AS MDM WHERE MOIS IN (SUBSTRING(ADD_MONTHS(CAST('###SLICE_VALUE###' AS DATE), -1), 1, 7), SUBSTRING(ADD_MONTHS(CAST('###SLICE_VALUE###' AS DATE), -2), 1, 7), SUBSTRING(ADD_MONTHS(CAST('###SLICE_VALUE###' AS DATE), -3), 1, 7)) GROUP BY MSISDN) AS E ON FN_FORMAT_MSISDN_TO_9DIGITS(TRIM(A.MSISDN)) = FN_FORMAT_MSISDN_TO_9DIGITS(TRIM(E.MSISDN)) LEFT JOIN (SELECT DISTINCT MSISDN FROM DIM.SPARK_DT_BDI_DEROGATION) AS F ON FN_FORMAT_MSISDN_TO_9DIGITS(TRIM(A.MSISDN)) = 
FN_FORMAT_MSISDN_TO_9DIGITS(TRIM(F.MSISDN)) LEFT JOIN (SELECT DISTINCT MSISDN FROM DIM.SPARK_DT_REF_SEGMENTATION_CLIENT) AS G ON FN_FORMAT_MSISDN_TO_9DIGITS(TRIM(A.MSISDN)) = FN_FORMAT_MSISDN_TO_9DIGITS(TRIM(G.MSISDN))